@mixin ctn-auto() {
	margin: auto;
	zoom: 1;

	&:before,
	&:after {
		content: '.';
		display: block;
		overflow: hidden;
		visibility: hidden;
		font-size: 0;
		line-height: 0;
		width: 0;
		height: 0;
	}

	&:after {
		clear: both;
	}
}

@mixin flexContainer($flex: '', $just-cont: '', $algn-cont: '', $algn-itm: '') {
	display: flex;

	@if $flex != '' {
		flex-flow: $flex;
	} 

	@if $just-cont != '' {
		justify-content: $just-cont;
	}
	
	@if $algn-cont != '' { 
		align-content: $algn-cont;
	}

	@if $algn-itm != '' {
		align-items: $algn-itm;
	}

	/*PS.: flex-flow (flex-direction | flex-wrap). */
}

@mixin flexItem($order: '', $flex: '', $algn-s: '') {
	
	@if $order != '' {
		order: $order;
	}

	@if $flex != ''  {
		flex: $flex;
	}	

	@if $algn-s != '' {
		align-self: $algn-s;
	}

	min-width: 0;
	min-height: 0;

	/*PS.: flex (flex-grow | flex-shrink | flex-basis)*/
}

@mixin fontFace($name, $fileName, $path, $weight: 400, $style: normal) {

	@font-face {
	    font-family: $name;
	    color: #fff;

	    src:	url('#{$fontsPath}#{$path}/#{$fileName}.eot');
	    src:	url('#{$fontsPath}#{$path}/#{$fileName}.eot?#iefix') format('embedded-opentype'),
	    url('#{$fontsPath}#{$path}/#{$fileName}.woff2') format('woff2'),
	    url('#{$fontsPath}#{$path}/#{$fileName}.woff') format('woff'),
	    url('#{$fontsPath}#{$path}/#{$fileName}.ttf') format('truetype'),
	    url('#{$fontsPath}#{$path}/#{$fileName}.svg') format('svg');
	    font-weight: $weight;
	    font-style: $style;
  }

}

